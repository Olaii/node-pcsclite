name: Publish to GitHub Packages

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    permissions:
      contents: write
      packages: write
    strategy:
      matrix:
        node-version: [20.x, 22.x]
        arch: [x64]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://npm.pkg.github.com'
          scope: '@printags'
      
      # Windows n'a pas besoin d'installer de dépendances pour PC/SC car c'est intégré
          
      - name: Install dependencies
        run: npm ci
      
      - name: Build prebuilds for Windows
        run: npm run prebuild
        
      - name: Debug - Show files
        run: |
          dir
          if exist prebuilds (
            dir prebuilds /s
          ) else (
            echo "prebuilds directory not found"
          )
          if exist build (
            dir build /s
          ) else (
            echo "build directory not found"
          )

      - name: Create binary package
        run: |
          # Generate binary directly with node-gyp
          echo "Building binary with node-gyp"
          node-gyp rebuild

          # Create package structure
          echo "Creating package structure"
          mkdir -p package\win32-x64
          copy build\Release\pcsclite.node package\win32-x64\
          
          # Package as tar.gz
          echo "Packaging as tar.gz"
          cd package
          tar -czf ..\win32-x64.tar.gz win32-x64
          cd ..
          
          # Verify
          dir win32-x64.tar.gz
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: win32-x64-${{ matrix.node-version }}
          path: win32-x64.tar.gz

  publish:
    needs: [build-windows]
    runs-on: windows-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22.x
          registry-url: 'https://npm.pkg.github.com'
          scope: '@printags'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: Debug - Show downloaded artifacts
        run: dir artifacts /s
          
      - name: Prepare for release
        run: |
          echo "Moving artifacts to root directory"
          copy artifacts\win32-x64-20.x\win32-x64.tar.gz win32-x64.tar.gz
      
      - name: Create GitHub Release and Upload Prebuilds
        id: create_release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          files: |
            win32-x64.tar.gz
      
      - name: Publish to GitHub Packages
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}